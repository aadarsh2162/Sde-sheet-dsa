package dsa.array;

public class LongestSubArrayWithsumK {
	public static void main(String[] args) {
		LongestSubArrayWithsumK k = new LongestSubArrayWithsumK();
		int[] arr = { 1, 2, 3, 1, 1, 1, 1, 3, 3 };
		int[] arr1 = { 10, 5, 2, 7, 1,9};

		System.out.println(k.longestSubarray(arr, 6));
		System.out.println(k.longestSubarray(arr1, 15));
	}

	public int longestSubarray(int[] nums, int k) {
		int sum = 0;
		int maxLen = 0;

		int j;
		int i = j = 0;

		while (i < nums.length) {
			sum += nums[j];

			if (sum < k)
				j++;
			else if (sum == k) {
				maxLen = Math.max(maxLen, j - i + 1);
				j++;
			} else if (sum > k)
				i++;

		}

		return maxLen;

	}

}
